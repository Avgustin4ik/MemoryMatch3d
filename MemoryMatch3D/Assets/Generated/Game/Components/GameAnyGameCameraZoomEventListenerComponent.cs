//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyGameCameraZoomEventListenerComponent anyGameCameraZoomEventListener { get { return (AnyGameCameraZoomEventListenerComponent)GetComponent(GameComponentsLookup.AnyGameCameraZoomEventListener); } }
    public bool hasAnyGameCameraZoomEventListener { get { return HasComponent(GameComponentsLookup.AnyGameCameraZoomEventListener); } }

    public void AddAnyGameCameraZoomEventListener(System.Collections.Generic.List<IAnyGameCameraZoomEventListener> newValue) {
        var index = GameComponentsLookup.AnyGameCameraZoomEventListener;
        var component = (AnyGameCameraZoomEventListenerComponent)CreateComponent(index, typeof(AnyGameCameraZoomEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyGameCameraZoomEventListener(System.Collections.Generic.List<IAnyGameCameraZoomEventListener> newValue) {
        var index = GameComponentsLookup.AnyGameCameraZoomEventListener;
        var component = (AnyGameCameraZoomEventListenerComponent)CreateComponent(index, typeof(AnyGameCameraZoomEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyGameCameraZoomEventListener() {
        RemoveComponent(GameComponentsLookup.AnyGameCameraZoomEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyGameCameraZoomEventListener;

    public static Entitas.IMatcher<GameEntity> AnyGameCameraZoomEventListener {
        get {
            if (_matcherAnyGameCameraZoomEventListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyGameCameraZoomEventListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyGameCameraZoomEventListener = matcher;
            }

            return _matcherAnyGameCameraZoomEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyGameCameraZoomEventListener(IAnyGameCameraZoomEventListener value) {
        var listeners = hasAnyGameCameraZoomEventListener
            ? anyGameCameraZoomEventListener.value
            : new System.Collections.Generic.List<IAnyGameCameraZoomEventListener>();
        listeners.Add(value);
        ReplaceAnyGameCameraZoomEventListener(listeners);
    }

    public void RemoveAnyGameCameraZoomEventListener(IAnyGameCameraZoomEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyGameCameraZoomEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyGameCameraZoomEventListener();
        } else {
            ReplaceAnyGameCameraZoomEventListener(listeners);
        }
    }
}
