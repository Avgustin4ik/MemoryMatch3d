//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity turnControllerEntity { get { return GetGroup(GameMatcher.TurnController).GetSingleEntity(); } }

    public bool isTurnController {
        get { return turnControllerEntity != null; }
        set {
            var entity = turnControllerEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isTurnController = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly Turn.TurnControllerComponent turnControllerComponent = new Turn.TurnControllerComponent();

    public bool isTurnController {
        get { return HasComponent(GameComponentsLookup.TurnController); }
        set {
            if (value != isTurnController) {
                var index = GameComponentsLookup.TurnController;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : turnControllerComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTurnController;

    public static Entitas.IMatcher<GameEntity> TurnController {
        get {
            if (_matcherTurnController == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TurnController);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTurnController = matcher;
            }

            return _matcherTurnController;
        }
    }
}
