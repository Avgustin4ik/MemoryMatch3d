//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.UsedData.UserDataComponents.CurrentLevelComponent currentLevel { get { return (Core.UsedData.UserDataComponents.CurrentLevelComponent)GetComponent(GameComponentsLookup.CurrentLevel); } }
    public bool hasCurrentLevel { get { return HasComponent(GameComponentsLookup.CurrentLevel); } }

    public void AddCurrentLevel(int newValue) {
        var index = GameComponentsLookup.CurrentLevel;
        var component = (Core.UsedData.UserDataComponents.CurrentLevelComponent)CreateComponent(index, typeof(Core.UsedData.UserDataComponents.CurrentLevelComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentLevel(int newValue) {
        var index = GameComponentsLookup.CurrentLevel;
        var component = (Core.UsedData.UserDataComponents.CurrentLevelComponent)CreateComponent(index, typeof(Core.UsedData.UserDataComponents.CurrentLevelComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentLevel() {
        RemoveComponent(GameComponentsLookup.CurrentLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentLevel;

    public static Entitas.IMatcher<GameEntity> CurrentLevel {
        get {
            if (_matcherCurrentLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentLevel = matcher;
            }

            return _matcherCurrentLevel;
        }
    }
}
