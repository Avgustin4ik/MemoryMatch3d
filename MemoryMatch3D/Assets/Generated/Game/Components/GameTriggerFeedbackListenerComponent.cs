//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TriggerFeedbackListenerComponent triggerFeedbackListener { get { return (TriggerFeedbackListenerComponent)GetComponent(GameComponentsLookup.TriggerFeedbackListener); } }
    public bool hasTriggerFeedbackListener { get { return HasComponent(GameComponentsLookup.TriggerFeedbackListener); } }

    public void AddTriggerFeedbackListener(System.Collections.Generic.List<ITriggerFeedbackListener> newValue) {
        var index = GameComponentsLookup.TriggerFeedbackListener;
        var component = (TriggerFeedbackListenerComponent)CreateComponent(index, typeof(TriggerFeedbackListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTriggerFeedbackListener(System.Collections.Generic.List<ITriggerFeedbackListener> newValue) {
        var index = GameComponentsLookup.TriggerFeedbackListener;
        var component = (TriggerFeedbackListenerComponent)CreateComponent(index, typeof(TriggerFeedbackListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTriggerFeedbackListener() {
        RemoveComponent(GameComponentsLookup.TriggerFeedbackListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTriggerFeedbackListener;

    public static Entitas.IMatcher<GameEntity> TriggerFeedbackListener {
        get {
            if (_matcherTriggerFeedbackListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TriggerFeedbackListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTriggerFeedbackListener = matcher;
            }

            return _matcherTriggerFeedbackListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTriggerFeedbackListener(ITriggerFeedbackListener value) {
        var listeners = hasTriggerFeedbackListener
            ? triggerFeedbackListener.value
            : new System.Collections.Generic.List<ITriggerFeedbackListener>();
        listeners.Add(value);
        ReplaceTriggerFeedbackListener(listeners);
    }

    public void RemoveTriggerFeedbackListener(ITriggerFeedbackListener value, bool removeComponentWhenEmpty = true) {
        var listeners = triggerFeedbackListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTriggerFeedbackListener();
        } else {
            ReplaceTriggerFeedbackListener(listeners);
        }
    }
}
