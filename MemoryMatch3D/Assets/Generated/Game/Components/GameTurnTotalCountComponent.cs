//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Turn.TurnTotalCountComponent turnTotalCount { get { return (Turn.TurnTotalCountComponent)GetComponent(GameComponentsLookup.TurnTotalCount); } }
    public bool hasTurnTotalCount { get { return HasComponent(GameComponentsLookup.TurnTotalCount); } }

    public void AddTurnTotalCount(long newValue) {
        var index = GameComponentsLookup.TurnTotalCount;
        var component = (Turn.TurnTotalCountComponent)CreateComponent(index, typeof(Turn.TurnTotalCountComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTurnTotalCount(long newValue) {
        var index = GameComponentsLookup.TurnTotalCount;
        var component = (Turn.TurnTotalCountComponent)CreateComponent(index, typeof(Turn.TurnTotalCountComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTurnTotalCount() {
        RemoveComponent(GameComponentsLookup.TurnTotalCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTurnTotalCount;

    public static Entitas.IMatcher<GameEntity> TurnTotalCount {
        get {
            if (_matcherTurnTotalCount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TurnTotalCount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTurnTotalCount = matcher;
            }

            return _matcherTurnTotalCount;
        }
    }
}
