//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Common.Components.ElementIndexComponent elementIndex { get { return (Common.Components.ElementIndexComponent)GetComponent(GameComponentsLookup.ElementIndex); } }
    public bool hasElementIndex { get { return HasComponent(GameComponentsLookup.ElementIndex); } }

    public void AddElementIndex(int newValue) {
        var index = GameComponentsLookup.ElementIndex;
        var component = (Common.Components.ElementIndexComponent)CreateComponent(index, typeof(Common.Components.ElementIndexComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceElementIndex(int newValue) {
        var index = GameComponentsLookup.ElementIndex;
        var component = (Common.Components.ElementIndexComponent)CreateComponent(index, typeof(Common.Components.ElementIndexComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveElementIndex() {
        RemoveComponent(GameComponentsLookup.ElementIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherElementIndex;

    public static Entitas.IMatcher<GameEntity> ElementIndex {
        get {
            if (_matcherElementIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ElementIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherElementIndex = matcher;
            }

            return _matcherElementIndex;
        }
    }
}
