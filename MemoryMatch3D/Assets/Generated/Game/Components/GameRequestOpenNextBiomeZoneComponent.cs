//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Biomes.RequestOpenNextBiomeZoneComponent requestOpenNextBiomeZone { get { return (Biomes.RequestOpenNextBiomeZoneComponent)GetComponent(GameComponentsLookup.RequestOpenNextBiomeZone); } }
    public bool hasRequestOpenNextBiomeZone { get { return HasComponent(GameComponentsLookup.RequestOpenNextBiomeZone); } }

    public void AddRequestOpenNextBiomeZone(int newValue) {
        var index = GameComponentsLookup.RequestOpenNextBiomeZone;
        var component = (Biomes.RequestOpenNextBiomeZoneComponent)CreateComponent(index, typeof(Biomes.RequestOpenNextBiomeZoneComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRequestOpenNextBiomeZone(int newValue) {
        var index = GameComponentsLookup.RequestOpenNextBiomeZone;
        var component = (Biomes.RequestOpenNextBiomeZoneComponent)CreateComponent(index, typeof(Biomes.RequestOpenNextBiomeZoneComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRequestOpenNextBiomeZone() {
        RemoveComponent(GameComponentsLookup.RequestOpenNextBiomeZone);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRequestOpenNextBiomeZone;

    public static Entitas.IMatcher<GameEntity> RequestOpenNextBiomeZone {
        get {
            if (_matcherRequestOpenNextBiomeZone == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RequestOpenNextBiomeZone);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRequestOpenNextBiomeZone = matcher;
            }

            return _matcherRequestOpenNextBiomeZone;
        }
    }
}
