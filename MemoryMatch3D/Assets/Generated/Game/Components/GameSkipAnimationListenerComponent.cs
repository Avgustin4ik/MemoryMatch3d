//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SkipAnimationListenerComponent skipAnimationListener { get { return (SkipAnimationListenerComponent)GetComponent(GameComponentsLookup.SkipAnimationListener); } }
    public bool hasSkipAnimationListener { get { return HasComponent(GameComponentsLookup.SkipAnimationListener); } }

    public void AddSkipAnimationListener(System.Collections.Generic.List<ISkipAnimationListener> newValue) {
        var index = GameComponentsLookup.SkipAnimationListener;
        var component = (SkipAnimationListenerComponent)CreateComponent(index, typeof(SkipAnimationListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSkipAnimationListener(System.Collections.Generic.List<ISkipAnimationListener> newValue) {
        var index = GameComponentsLookup.SkipAnimationListener;
        var component = (SkipAnimationListenerComponent)CreateComponent(index, typeof(SkipAnimationListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSkipAnimationListener() {
        RemoveComponent(GameComponentsLookup.SkipAnimationListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSkipAnimationListener;

    public static Entitas.IMatcher<GameEntity> SkipAnimationListener {
        get {
            if (_matcherSkipAnimationListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SkipAnimationListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSkipAnimationListener = matcher;
            }

            return _matcherSkipAnimationListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSkipAnimationListener(ISkipAnimationListener value) {
        var listeners = hasSkipAnimationListener
            ? skipAnimationListener.value
            : new System.Collections.Generic.List<ISkipAnimationListener>();
        listeners.Add(value);
        ReplaceSkipAnimationListener(listeners);
    }

    public void RemoveSkipAnimationListener(ISkipAnimationListener value, bool removeComponentWhenEmpty = true) {
        var listeners = skipAnimationListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSkipAnimationListener();
        } else {
            ReplaceSkipAnimationListener(listeners);
        }
    }
}
