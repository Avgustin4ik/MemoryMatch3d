//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InFocusListenerComponent inFocusListener { get { return (InFocusListenerComponent)GetComponent(GameComponentsLookup.InFocusListener); } }
    public bool hasInFocusListener { get { return HasComponent(GameComponentsLookup.InFocusListener); } }

    public void AddInFocusListener(System.Collections.Generic.List<IInFocusListener> newValue) {
        var index = GameComponentsLookup.InFocusListener;
        var component = (InFocusListenerComponent)CreateComponent(index, typeof(InFocusListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInFocusListener(System.Collections.Generic.List<IInFocusListener> newValue) {
        var index = GameComponentsLookup.InFocusListener;
        var component = (InFocusListenerComponent)CreateComponent(index, typeof(InFocusListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInFocusListener() {
        RemoveComponent(GameComponentsLookup.InFocusListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInFocusListener;

    public static Entitas.IMatcher<GameEntity> InFocusListener {
        get {
            if (_matcherInFocusListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InFocusListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInFocusListener = matcher;
            }

            return _matcherInFocusListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddInFocusListener(IInFocusListener value) {
        var listeners = hasInFocusListener
            ? inFocusListener.value
            : new System.Collections.Generic.List<IInFocusListener>();
        listeners.Add(value);
        ReplaceInFocusListener(listeners);
    }

    public void RemoveInFocusListener(IInFocusListener value, bool removeComponentWhenEmpty = true) {
        var listeners = inFocusListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveInFocusListener();
        } else {
            ReplaceInFocusListener(listeners);
        }
    }
}
