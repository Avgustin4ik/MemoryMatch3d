//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.UsedData.UserDataComponents.OpenedLevelComponent openedLevel { get { return (Core.UsedData.UserDataComponents.OpenedLevelComponent)GetComponent(GameComponentsLookup.OpenedLevel); } }
    public bool hasOpenedLevel { get { return HasComponent(GameComponentsLookup.OpenedLevel); } }

    public void AddOpenedLevel(int newValue) {
        var index = GameComponentsLookup.OpenedLevel;
        var component = (Core.UsedData.UserDataComponents.OpenedLevelComponent)CreateComponent(index, typeof(Core.UsedData.UserDataComponents.OpenedLevelComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceOpenedLevel(int newValue) {
        var index = GameComponentsLookup.OpenedLevel;
        var component = (Core.UsedData.UserDataComponents.OpenedLevelComponent)CreateComponent(index, typeof(Core.UsedData.UserDataComponents.OpenedLevelComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOpenedLevel() {
        RemoveComponent(GameComponentsLookup.OpenedLevel);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOpenedLevel;

    public static Entitas.IMatcher<GameEntity> OpenedLevel {
        get {
            if (_matcherOpenedLevel == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.OpenedLevel);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOpenedLevel = matcher;
            }

            return _matcherOpenedLevel;
        }
    }
}
