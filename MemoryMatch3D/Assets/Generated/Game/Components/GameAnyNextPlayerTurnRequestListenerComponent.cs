//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyNextPlayerTurnRequestListenerComponent anyNextPlayerTurnRequestListener { get { return (AnyNextPlayerTurnRequestListenerComponent)GetComponent(GameComponentsLookup.AnyNextPlayerTurnRequestListener); } }
    public bool hasAnyNextPlayerTurnRequestListener { get { return HasComponent(GameComponentsLookup.AnyNextPlayerTurnRequestListener); } }

    public void AddAnyNextPlayerTurnRequestListener(System.Collections.Generic.List<IAnyNextPlayerTurnRequestListener> newValue) {
        var index = GameComponentsLookup.AnyNextPlayerTurnRequestListener;
        var component = (AnyNextPlayerTurnRequestListenerComponent)CreateComponent(index, typeof(AnyNextPlayerTurnRequestListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyNextPlayerTurnRequestListener(System.Collections.Generic.List<IAnyNextPlayerTurnRequestListener> newValue) {
        var index = GameComponentsLookup.AnyNextPlayerTurnRequestListener;
        var component = (AnyNextPlayerTurnRequestListenerComponent)CreateComponent(index, typeof(AnyNextPlayerTurnRequestListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyNextPlayerTurnRequestListener() {
        RemoveComponent(GameComponentsLookup.AnyNextPlayerTurnRequestListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyNextPlayerTurnRequestListener;

    public static Entitas.IMatcher<GameEntity> AnyNextPlayerTurnRequestListener {
        get {
            if (_matcherAnyNextPlayerTurnRequestListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyNextPlayerTurnRequestListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyNextPlayerTurnRequestListener = matcher;
            }

            return _matcherAnyNextPlayerTurnRequestListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyNextPlayerTurnRequestListener(IAnyNextPlayerTurnRequestListener value) {
        var listeners = hasAnyNextPlayerTurnRequestListener
            ? anyNextPlayerTurnRequestListener.value
            : new System.Collections.Generic.List<IAnyNextPlayerTurnRequestListener>();
        listeners.Add(value);
        ReplaceAnyNextPlayerTurnRequestListener(listeners);
    }

    public void RemoveAnyNextPlayerTurnRequestListener(IAnyNextPlayerTurnRequestListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyNextPlayerTurnRequestListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyNextPlayerTurnRequestListener();
        } else {
            ReplaceAnyNextPlayerTurnRequestListener(listeners);
        }
    }
}
