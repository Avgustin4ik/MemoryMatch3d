//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Player.PlayersTurnsLimitComponent playersTurnsLimit { get { return (Player.PlayersTurnsLimitComponent)GetComponent(GameComponentsLookup.PlayersTurnsLimit); } }
    public bool hasPlayersTurnsLimit { get { return HasComponent(GameComponentsLookup.PlayersTurnsLimit); } }

    public void AddPlayersTurnsLimit(uint newValue) {
        var index = GameComponentsLookup.PlayersTurnsLimit;
        var component = (Player.PlayersTurnsLimitComponent)CreateComponent(index, typeof(Player.PlayersTurnsLimitComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayersTurnsLimit(uint newValue) {
        var index = GameComponentsLookup.PlayersTurnsLimit;
        var component = (Player.PlayersTurnsLimitComponent)CreateComponent(index, typeof(Player.PlayersTurnsLimitComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayersTurnsLimit() {
        RemoveComponent(GameComponentsLookup.PlayersTurnsLimit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayersTurnsLimit;

    public static Entitas.IMatcher<GameEntity> PlayersTurnsLimit {
        get {
            if (_matcherPlayersTurnsLimit == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayersTurnsLimit);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayersTurnsLimit = matcher;
            }

            return _matcherPlayersTurnsLimit;
        }
    }
}
