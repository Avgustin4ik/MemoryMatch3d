//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ComplicatorsEntity {

    static readonly Complicators.CheckNextAvailableComplicatorRequestComponent checkNextAvailableComplicatorRequestComponent = new Complicators.CheckNextAvailableComplicatorRequestComponent();

    public bool isCheckNextAvailableComplicatorRequest {
        get { return HasComponent(ComplicatorsComponentsLookup.CheckNextAvailableComplicatorRequest); }
        set {
            if (value != isCheckNextAvailableComplicatorRequest) {
                var index = ComplicatorsComponentsLookup.CheckNextAvailableComplicatorRequest;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : checkNextAvailableComplicatorRequestComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ComplicatorsMatcher {

    static Entitas.IMatcher<ComplicatorsEntity> _matcherCheckNextAvailableComplicatorRequest;

    public static Entitas.IMatcher<ComplicatorsEntity> CheckNextAvailableComplicatorRequest {
        get {
            if (_matcherCheckNextAvailableComplicatorRequest == null) {
                var matcher = (Entitas.Matcher<ComplicatorsEntity>)Entitas.Matcher<ComplicatorsEntity>.AllOf(ComplicatorsComponentsLookup.CheckNextAvailableComplicatorRequest);
                matcher.componentNames = ComplicatorsComponentsLookup.componentNames;
                _matcherCheckNextAvailableComplicatorRequest = matcher;
            }

            return _matcherCheckNextAvailableComplicatorRequest;
        }
    }
}
