//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ContextsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts : Entitas.IContexts {

    public static Contexts sharedInstance {
        get {
            if (_sharedInstance == null) {
                _sharedInstance = new Contexts();
            }

            return _sharedInstance;
        }
        set { _sharedInstance = value; }
    }

    static Contexts _sharedInstance;

    public ComplicatorsContext complicators { get; set; }
    public DataContext data { get; set; }
    public GameContext game { get; set; }
    public InputContext input { get; set; }
    public LevelContext level { get; set; }
    public StateContext state { get; set; }
    public UiContext ui { get; set; }

    public Entitas.IContext[] allContexts { get { return new Entitas.IContext [] { complicators, data, game, input, level, state, ui }; } }

    public Contexts() {
        complicators = new ComplicatorsContext();
        data = new DataContext();
        game = new GameContext();
        input = new InputContext();
        level = new LevelContext();
        state = new StateContext();
        ui = new UiContext();

        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );

        foreach (var postConstructor in postConstructors) {
            postConstructor.Invoke(this, null);
        }
    }

    public void Reset() {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++) {
            contexts[i].Reset();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EntityIndexGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

    public const string BiomeType = "BiomeType";
    public const string BiomeZone = "BiomeZone";
    public const string Blueprint = "Blueprint";
    public const string HashCode = "HashCode";
    public const string Index = "Index";
    public const string TurnNumber = "TurnNumber";

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices() {
        game.AddEntityIndex(new Entitas.EntityIndex<GameEntity, Biomes.Biomes>(
            BiomeType,
            game.GetGroup(GameMatcher.BiomeType),
            (e, c) => ((Biomes.BiomeTypeComponent)c).value));

        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, Animals.AnimalsType>(
            BiomeZone,
            game.GetGroup(GameMatcher.BiomeZone),
            (e, c) => ((Biomes.BiomeZoneComponent)c).value));

        level.AddEntityIndex(new Entitas.EntityIndex<LevelEntity, int>(
            Blueprint,
            level.GetGroup(LevelMatcher.Blueprint),
            (e, c) => ((Core.GameLevels.BlueprintComponent)c).index));

        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, int>(
            HashCode,
            game.GetGroup(GameMatcher.HashCode),
            (e, c) => ((Core.Common.HashCodeComponent)c).value));
        ui.AddEntityIndex(new Entitas.PrimaryEntityIndex<UiEntity, int>(
            HashCode,
            ui.GetGroup(UiMatcher.HashCode),
            (e, c) => ((Core.Common.HashCodeComponent)c).value));

        game.AddEntityIndex(new Entitas.EntityIndex<GameEntity, UnityEngine.Vector2Int>(
            Index,
            game.GetGroup(GameMatcher.Index),
            (e, c) => ((Grid.GridComponents.IndexComponent)c).value));

        complicators.AddEntityIndex(new Entitas.EntityIndex<ComplicatorsEntity, int>(
            TurnNumber,
            complicators.GetGroup(ComplicatorsMatcher.TurnNumber),
            (e, c) => ((Complicators.TurnNumberComponent)c).value));
    }
}

public static class ContextsExtensions {

    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesWithBiomeType(this GameContext context, Biomes.Biomes value) {
        return ((Entitas.EntityIndex<GameEntity, Biomes.Biomes>)context.GetEntityIndex(Contexts.BiomeType)).GetEntities(value);
    }

    public static GameEntity GetEntityWithBiomeZone(this GameContext context, Animals.AnimalsType value) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, Animals.AnimalsType>)context.GetEntityIndex(Contexts.BiomeZone)).GetEntity(value);
    }

    public static System.Collections.Generic.HashSet<LevelEntity> GetEntitiesWithBlueprint(this LevelContext context, int index) {
        return ((Entitas.EntityIndex<LevelEntity, int>)context.GetEntityIndex(Contexts.Blueprint)).GetEntities(index);
    }

    public static GameEntity GetEntityWithHashCode(this GameContext context, int value) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, int>)context.GetEntityIndex(Contexts.HashCode)).GetEntity(value);
    }

    public static UiEntity GetEntityWithHashCode(this UiContext context, int value) {
        return ((Entitas.PrimaryEntityIndex<UiEntity, int>)context.GetEntityIndex(Contexts.HashCode)).GetEntity(value);
    }

    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesWithIndex(this GameContext context, UnityEngine.Vector2Int value) {
        return ((Entitas.EntityIndex<GameEntity, UnityEngine.Vector2Int>)context.GetEntityIndex(Contexts.Index)).GetEntities(value);
    }

    public static System.Collections.Generic.HashSet<ComplicatorsEntity> GetEntitiesWithTurnNumber(this ComplicatorsContext context, int value) {
        return ((Entitas.EntityIndex<ComplicatorsEntity, int>)context.GetEntityIndex(Contexts.TurnNumber)).GetEntities(value);
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.VisualDebugging.CodeGeneration.Plugins.ContextObserverGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContextObservers() {
        try {
            CreateContextObserver(complicators);
            CreateContextObserver(data);
            CreateContextObserver(game);
            CreateContextObserver(input);
            CreateContextObserver(level);
            CreateContextObserver(state);
            CreateContextObserver(ui);
        } catch(System.Exception) {
        }
    }

    public void CreateContextObserver(Entitas.IContext context) {
        if (UnityEngine.Application.isPlaying) {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }

#endif
}
