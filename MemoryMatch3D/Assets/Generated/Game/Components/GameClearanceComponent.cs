//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Grid.GridComponents.ClearanceComponent clearance { get { return (Grid.GridComponents.ClearanceComponent)GetComponent(GameComponentsLookup.Clearance); } }
    public bool hasClearance { get { return HasComponent(GameComponentsLookup.Clearance); } }

    public void AddClearance(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.Clearance;
        var component = (Grid.GridComponents.ClearanceComponent)CreateComponent(index, typeof(Grid.GridComponents.ClearanceComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceClearance(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.Clearance;
        var component = (Grid.GridComponents.ClearanceComponent)CreateComponent(index, typeof(Grid.GridComponents.ClearanceComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveClearance() {
        RemoveComponent(GameComponentsLookup.Clearance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherClearance;

    public static Entitas.IMatcher<GameEntity> Clearance {
        get {
            if (_matcherClearance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Clearance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherClearance = matcher;
            }

            return _matcherClearance;
        }
    }
}
