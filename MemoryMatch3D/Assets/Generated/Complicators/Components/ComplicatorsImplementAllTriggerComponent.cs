//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ComplicatorsEntity {

    static readonly Complicators.ImplementAllTriggerComponent implementAllTriggerComponent = new Complicators.ImplementAllTriggerComponent();

    public bool isImplementAllTrigger {
        get { return HasComponent(ComplicatorsComponentsLookup.ImplementAllTrigger); }
        set {
            if (value != isImplementAllTrigger) {
                var index = ComplicatorsComponentsLookup.ImplementAllTrigger;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : implementAllTriggerComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ComplicatorsMatcher {

    static Entitas.IMatcher<ComplicatorsEntity> _matcherImplementAllTrigger;

    public static Entitas.IMatcher<ComplicatorsEntity> ImplementAllTrigger {
        get {
            if (_matcherImplementAllTrigger == null) {
                var matcher = (Entitas.Matcher<ComplicatorsEntity>)Entitas.Matcher<ComplicatorsEntity>.AllOf(ComplicatorsComponentsLookup.ImplementAllTrigger);
                matcher.componentNames = ComplicatorsComponentsLookup.componentNames;
                _matcherImplementAllTrigger = matcher;
            }

            return _matcherImplementAllTrigger;
        }
    }
}
